// commands/leave.js
const { SlashCommandBuilder, PermissionFlagsBits } = require("discord.js");
const { getVoiceConnection } = require("@discordjs/voice");

const parseIds = (s) => (s || "").split(",").map(x => x.trim()).filter(Boolean);
const ALLOW_USERS = parseIds(process.env.SPECIAL_USER_IDS);
const ALLOW_ROLES = parseIds(process.env.SPECIAL_ROLE_IDS);

module.exports = {
  data: new SlashCommandBuilder()
    .setName("leave")
    .setDescription("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á voice (Admin/‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡πÄ‡∏®‡∏©)")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator) // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    .setDMPermission(false),

  async execute(interaction) {
    // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô, user ‡∏û‡∏¥‡πÄ‡∏®‡∏©, role ‡∏û‡∏¥‡πÄ‡∏®‡∏©
    const isAdmin = interaction.memberPermissions?.has(PermissionFlagsBits.Administrator);
    const isAllowUser = ALLOW_USERS.includes(interaction.user.id);
    const isAllowRole = interaction.member?.roles?.cache?.some(r => ALLOW_ROLES.includes(r.id));

    if (!(isAdmin || isAllowUser || isAllowRole)) {
      return interaction.reply({ content: "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral: true });
    }

    const connection = getVoiceConnection(interaction.guild.id);
    if (!connection) {
      return interaction.reply({ content: "‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á voice", ephemeral: true });
    }

    try {
      connection.destroy();
      await interaction.reply({ content: "üëã ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral: true });
    } catch (e) {
      await interaction.reply({ content: `‚ö†Ô∏è ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á: ${e?.message || e}`, ephemeral: true });
    }
  },
};
